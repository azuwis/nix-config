name: Build package
permissions: {}
on:
  pull_request:
    paths:
      - pkgs/**
      - overlays/default.nix
  workflow_dispatch:
    inputs:
      debug:
        description: Enable debug
        type: boolean
        required: false
        default: false
      os:
        description: Debug OS
        required: true
        type: choice
        options: [ubuntu-latest, macos-latest, all]
jobs:
  build:
    if: startsWith(github.head_ref, 'update/')
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-12]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Skip debug
        if: >-
          ${{ github.event_name == 'workflow_dispatch' && inputs.debug && !
              (inputs.os == matrix.os || inputs.os == 'all')
          }}
        run: exit 1
      - uses: actions/checkout@v4
      - uses: azuwis/actions/nix@main
        with:
          key: package-${{ github.head_ref }}
          debug: ${{ github.event_name == 'workflow_dispatch' && inputs.debug }}
      - uses: cachix/cachix-action@v15
        with:
          name: azuwis
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
      - name: Build
        run: |
          package=${GITHUB_HEAD_REF#update/}
          if [ "$(nix eval --impure --json --expr "
          let
            pkgs = import ./default.nix { };
            meta = pkgs.$package.meta;
          in
          (meta ? platforms && builtins.elem builtins.currentSystem meta.platforms)
            || !(meta ? platforms)
          ")" = false ]; then
            echo "Skip build, wrong platform"
            exit
          fi
          echo "::group::Build $package"
          nix -L build -f . "$package"
          echo "::endgroup::"
          echo "::group::Install 'tree'"
          nix-env -f '<nixpkgs>' -iA tree
          echo "::endgroup::"
          echo "::group::List files of $package"
          tree -a result
          echo "::endgroup::"
      - uses: azuwis/actions/nix/post@main

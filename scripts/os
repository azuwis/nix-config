#!/usr/bin/env bash

set -e

if [ -e /etc/nixos ]
then
  FLAKE=/etc/nixos
else
  FLAKE="$HOME/.config/nixpkgs"
fi

case "$(uname -s)" in
  Darwin)
    OS=darwin
    ;;
  Linux)
    if [ -d /system/app/ ] && [ -d /system/priv-app ]
    then
      OS=droid
    else
      OS=nixos
    fi
    ;;
  *)
    exit 1
    ;;
esac

build() {
  local hostname args

  if [ -n "$1" ]
  then
    hostname="$1"
    mkdir -p "$FLAKE/gcroots"
    args=(--out-link "$FLAKE/gcroots/$hostname")
  else
    hostname="$(hostname)"
    args=(--no-link)
  fi

  case "$OS" in
    darwin)
      args+=("$FLAKE#darwinConfigurations.\"$hostname\".system")
      SYSTEM=/run/current-system
      ;;
    droid)
      args+=(--impure "$FLAKE#nixOnDroidConfigurations.default.activationPackage")
      SYSTEM=/nix/var/nix/profiles/nix-on-droid
      ;;
    nixos)
      args+=("$FLAKE#nixosConfigurations.\"$hostname\".config.system.build.toplevel")
      SYSTEM=/run/current-system
      ;;
  esac

  BUILT=$(nix run nixpkgs#nix-output-monitor -- build --print-out-paths "${args[@]}")

  if [ -z "$1" ]
  then
    nix run nixpkgs#nvd -- diff "$SYSTEM" "$BUILT"
  fi
}

droid_switch() {
  # It seems nix eval cache does not work on nix-on-droid,
  # directly call activate script to avoid eval again
  "$BUILT/activate"
}

update() {
  pushd "$FLAKE"
  local args
  args=(--recreate-lock-file)
  if [ -n "$1" ]
  then
    input="$1"
    args=(--update-input "$input")
    shift
  fi
  if [ -n "$1" ]
  then
    url=$(nix-instantiate --eval --attr "inputs.$input.url" flake.nix)
    url=${url#\"}
    url=${url%\"}
    slash=${url//[^\/]}
    if [ "${#slash}" = 1 ]
    then
      url="$url/$1"
    elif [ "${#slash}" = 2 ]
    then
      url=${url%/*}
      url="$url/$1"
    else
      url="$1"
    fi
    args+=(--override-input "$input" "$url")
    shift
  fi
  nix flake lock "${args[@]}" "$@"
  popd
}

ASK=no
ACTION="$1"
if [ -n "$ACTION" ]
then
  shift
else
  ACTION="switch"
  ASK=yes
fi
case "$ACTION" in
  b|build)
    build "$@"
    exit $?
    ;;
  d|diff)
    build
    nix run nixpkgs#nix-diff -- --character-oriented "$SYSTEM" "$BUILT"
    exit $?
    ;;
  l|list)
    ACTION=list-generations
    ;;
  s|switch)
    build
    if [ "$ASK" = yes ]
    then
      read -p "Switch? [Yn]" -r answer
      if [ -n "$answer" ] && [ "$answer" != "Y" ]
      then
        exit 1
      fi
    fi
    if [ "$OS" = droid ]
    then
      droid_switch
      exit $?
    fi
    ACTION="switch"
    ;;
  u|update)
    update "$@"
    exit $?
    ;;
esac

case "$OS" in
  darwin)
    CMD=(darwin-rebuild --flake "$FLAKE")
    ;;
  droid)
    CMD=(nix-on-droid --flake "$FLAKE")
    ;;
  nixos)
    CMD=(nixos-rebuild --flake "$FLAKE" --fast --use-remote-sudo)
    ;;
esac

"${CMD[@]}" "$ACTION" "$@"
